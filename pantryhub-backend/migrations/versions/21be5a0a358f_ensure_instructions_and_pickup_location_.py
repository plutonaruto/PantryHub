"""Ensure instructions and pickup_location columns exist

Revision ID: 21be5a0a358f
Revises: fdd0a490fb14
Create Date: 2025-06-27 14:17:18.429211

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '21be5a0a358f'
down_revision = 'fdd0a490fb14'
branch_labels = None
depends_on = None


def upgrade():
    # For the 'item' table
    op.execute('ALTER TABLE item ALTER COLUMN owner_id TYPE INTEGER USING owner_id::integer')

    # For the 'marketplace_item' table
    op.execute('ALTER TABLE marketplace_item ALTER COLUMN owner_id TYPE INTEGER USING owner_id::integer')

    # Add the new columns to 'marketplace_item'
    with op.batch_alter_table('marketplace_item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('instructions', sa.Text(), nullable=False, server_default="No Instructions"))
        batch_op.add_column(sa.Column('pickup_location', sa.String(length=100), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('marketplace_item', schema=None) as batch_op:
        batch_op.alter_column('owner_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
        batch_op.drop_column('pickup_location')
        batch_op.drop_column('instructions')

    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.alter_column('owner_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)

    # ### end Alembic commands ###
